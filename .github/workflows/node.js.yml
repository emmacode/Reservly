# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Reservly Node.js CI/CD
on:
  push:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build
    - run: |
        touch .env
        echo "${{ secrets.PROD_ENV_FILE }}" > .env
    - run: npm test
    
    - name: Create deployment package
      run: |
        # Create a directory for deployment files
        mkdir deploy
        # Copy build output
        cp -r dist/ deploy/
        # Copy package files for production dependencies
        cp package.json deploy/
        cp package-lock.json deploy/
        cp .env deploy/
        mkdir -p deploy/src
        cp src/reservly.docs.yaml deploy/src/reservly.docs.yaml
    
    - name: Copy files to EC2
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "deploy/*"
        target: "/home/${{ secrets.EC2_USERNAME }}/app"
        strip_components: 1
        
    - name: Install dependencies and restart app
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd ~/app
          npm install --production
          pm2 restart app || pm2 start dist/server.js --name="app"
